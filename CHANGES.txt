1.3.2: 2022 Jul 26

* fixed connecting to local webserver from remote machine requires explicit ip

1.3.1: 2022 May 31

* added missing LICENSE.txt (whoops)

1.3.0: 2022 Apr 28

* added p5.js proximity simulator implementation

1.2.0: 2022 Apr 05

* fixed get_pid script function on Linux
* fixed Chinese confirmation prompt

* added local python webserver at localhost:8080 (default)
  start ./server.sh with --webport 80 --no-webserver if using Apache, etc
* added prototype hardware info to readme
* added info about cloning submodules

* now use local webserver host & port by default
* display script will now run in loop if sensor is not found
* scripts now accept web port via --webport option
* server script now accepts lang detection command via -e/--exec option
* prefer 中文 over Zhōngwén when referring to the Chinese language
* readme system setup info split into seaprate markdown files
* updated readme git clone example link to use https

* moved automation scripts and info to a separate repo
* removed private password and ThingsBoard URLs from repo history

1.1.0: 2022 Mar 09

* fixed device id when sending with UDP

* added install pictures and screenshots
* added project attribution

* tfluna now split into a separate repo and readded as a submodule
* filled out tfluna documentation and readme info
* updated display and textlabel scripts to run on macOS

* removed old rpi-specific config scripts and support files

1.0.2: 2022 Feb 21

* fixed server.sh -l/--list flag

* added note about crontab to readme
* added system & tech diagrams

* updated submodules to latest bugfix versions
* wait 1 second on server.sh shutdown

* remove explicit encoding as python 3 uses utf-8 by default

1.0.1: 2021 Dec 19

textlabel tweaks

* stop existing fade timers before starting next fade, this hopefully fixes
  issue where wait animation may sometimes stay on screen while textlabel is
  visible
* show de text on timeout instead of en text
* show de text label on fail instead of leaving noise text
* show speak language icon for listen state in status as well

1.0.0: 2021 Dec 18

BioMedien exhibition

* added baton and LanguageIdentifier as submodules
* added thingsboard sending to tfluna and controller scripts
* added meta Makefile to ease setup and deployment
* added and expanded scripting & automation

* updated and expanded tfluna script with commandline options, bug fixes, etc
* updated controller proximity interaction handling 
* updated textlabel interaction handling based on observation and feedback 
* updated documentation

* removed label json files in favor of html translations for now

0.4.0: 2021 Nov 9

prototype 2

* added changelog
* added display, server, and textlabel run scripts

textlabel:
  - fixed set debug var error
  - replaced video loop with p5 animation
  - added state icons and large lang confirmation to prompt
  - added noise.json file with symbol text
  - now show label while handling state changes
  - removed localized prompt text in favor of simple state and lang display

controller:
  - updated logic to restart listening after detection success or failure
  - activity timeout is now used if there is no audio activity when listening
  - fail state now sends detected noise lang message
  - make sure to cancel timers on exit

0.3.0: 2021 Oct 14

prototype 1

* added textlabel html client which integrates prompt & demo2
* added tfluna sensor script from ZKM MuTech
* added chromium textlabel start script
* added test system run script to start LanguageIdentifier, baton relay server,
  and controller
* added controller makefile setup, dependencies list, and run wrapper script
* added pd lid system OSC message test sender

* leave detected langauge textlabel on success and only wait after person leaves
* updated html clients with additional model 2 languages and responsive design
* various bugfixes and updates

0.2.0: 2021 Aug 17

prototype 1 system demo

* added python logic controller
* added html prompt client
* added proximity sensor simulator

* repo cleanups and reorganization

0.1.0: 2021 Jul 02

hack / brainstorm session

* added initial websocket client demos
* added RPI setup files and tfluna scripts from ZKM MuTech
